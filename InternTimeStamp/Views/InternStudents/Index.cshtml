@model global::InternTimeStamp.ViewModels.InternStudentList.IndexViewModels

@{
    ViewData["Title"] = "Internship Students";
    string[] TableHeaders = new string[] { "No.", "Name", "University", "Delete/Edit" };
}

<h1>
    @ViewData["Title"]
    <button type="button" name="add" id="addButton" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">
        Add
    </button>
</h1>

<!-- addModal -->
<div class="modal fade" id="addModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Add Internship Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="container">
                <div class="row">
                    <div class='col-sm-12'>
                        <form action="InternStudents" method="post">
                            <label class="mt-4 mb-2" for="code">Name*</label>
                            <input type="text" name="Name" id="addName" class="form-control" placeholder="Enter Student Name" required>
                            <label class="mt-4 mb-2" for="University_Code">University*</label>
                            <select class="form-select" id="addUni" name="University" required>
                                @foreach (var item in Model.UniversityLists)
                                {
                                    <option value="@item.UniversityName">@item.UniversityName</option>
                                }
                            </select>
                            <div class="modal-footer mt-4">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" onclick="addIntern()" class="btn btn-primary" data-bs-dismiss="modal">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- editModal -->
<div class="modal fade" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Edit Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="container">
                <div class="row">
                    <div class='col-sm-12'>
                        <form action="InternStudents" method="post">
                            <label class="mt-4 mb-2" for="Name">Name*</label>
                            <input type="text" id="editName" name="Name" class="form-control" placeholder="Enter Student name" required>
                            <label class="mt-4 mb-2" for="University_Code">University*</label>
                            <select class="form-select" id="editUni" name="University" required>
                                @foreach (var item in Model.UniversityLists)
                                {
                                    <option value="@item.UniversityName">@item.UniversityName</option>
                                }
                            </select>
                            <div class="modal-footer mt-4">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <input type="submit" value="Submit" class="btn btn-primary">
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- deleteModal -->
<div class="modal fade" tabindex="-1" id="deleteModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete this student?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" onclick="deleteIntern()" data-bs-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- table -->
@{
    if (Model.InternStudentLists.Count() == 0)
    {
        <h3 class="text-danger text-center mt-4">-No data-</h3>
    }
    else
    {
        <table class="table table-striped table-info mt-4">
            <tr>
                @{
                    foreach (var head in TableHeaders)
                    {
                        <th class="text-center">
                            @head
                        </th>
                    }
                }
            </tr>
            @{
                if (Model != null)
                {
                    int i = 1;
                    foreach (var Data in Model.InternStudentLists)
                    {
                        <tr>
                            <td class="text-center">@i</td>
                            <td>@Data.Name</td>
                            <td>@Data.University</td>
                            <td class="text-center">
                                <button type="button" name="edit" id="editButton" class="btn btn-danger" id="btndelete" onclick="setDelete('@Data.Name')" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete</button>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" onclick="setEdit('@Data.Name')" data-bs-target="#editModal">Edit</button>
                            </td>
                        </tr>
                        i++;
                    }
                }
            }
        </table>
    }
}

<script type="text/javascript">
    var deleteData = ''

    function setDelete(data) {
        deleteData = data;
    }

    function deleteIntern() {
        $.ajax({
            type: 'GET',
            url: 'InternStudents/Delete/' + deleteData,
            success: function(data) {
                alert(data);
                location.reload(true);
            },
            error: function(error) {
                alert("Failed! Please try again.");
            }
        })
    }

    function addIntern() {
        debugger;
        $.ajax({
            type: "POST",
            url: "/InternStudents",
            dataType: "JSON",
            data: {
                Name: $('#addName').val(),
                University: $('#addUni').val(),
            },
            success: function(result) {
                location.reload(true);
            },
            error: function() {
                //alert("Failed! Please try again.");
                location.reload(true);
            }
        });
        debugger;
    }

    var editData = ''

    function setEdit(data) {
        $.ajax({
            type: 'GET',
            url: 'InternStudents/get/' + data,
            success: function(data) {
                $('#editName').val(data.Name);
                $('#editUni').val(data.University);
            },
            error: function(error) {
                alert("Failed! Please try again.");
            }
        })
        editData = data;
    }

    function editClick() {
        debugger;
        var Name = $('#editName').val();
        var University = $('#editUni').val();
        var editObject = {
            Name: Name,
            University: University
        };
        //$.post('universities/Edit',
        //    editObject,
        //    function(data, status) {
        //        alert(data);
        //    });
        debugger;
        $.ajax({
            type: 'post',
            url: 'InternStudents/Edit' + editData,
            data: editObject,
            success: function(data) {
                location.reload(true);
            },
            error: function(error) {
                alert("Failed! Please try again.");
            }
        })
        debugger;
    }

    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }

</script>